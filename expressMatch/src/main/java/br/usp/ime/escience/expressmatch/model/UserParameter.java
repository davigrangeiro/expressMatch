package br.usp.ime.escience.expressmatch.model;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserParameter generated by hbm2java
 */
@Entity
@Table(name = "user_parameter", catalog = "expressMatch")
public class UserParameter implements java.io.Serializable {


	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private int polarLocalRegions;
	private int angularLocalRegions;
	private int polarGlobalRegions;
	private int angularGlobalRegions;
	private int pointsPerSymbol;
	private Date insertDate;
	private Boolean root;
	private Set<UserInfo> userInfos = new HashSet<UserInfo>(0);

	public UserParameter() {
	}

	public UserParameter(int polarLocalRegions, int angularLocalRegions,
			int polarGlobalRegions, int angularGlobalRegions,
			int pointsPerSymbol, Date insertDate) {
		this.polarLocalRegions = polarLocalRegions;
		this.angularLocalRegions = angularLocalRegions;
		this.polarGlobalRegions = polarGlobalRegions;
		this.angularGlobalRegions = angularGlobalRegions;
		this.pointsPerSymbol = pointsPerSymbol;
		this.insertDate = insertDate;
	}

	public UserParameter(int polarLocalRegions, int angularLocalRegions,
			int polarGlobalRegions, int angularGlobalRegions,
			int pointsPerSymbol, Date insertDate, Boolean root, Set<UserInfo> userInfos) {
		this.polarLocalRegions = polarLocalRegions;
		this.angularLocalRegions = angularLocalRegions;
		this.polarGlobalRegions = polarGlobalRegions;
		this.angularGlobalRegions = angularGlobalRegions;
		this.pointsPerSymbol = pointsPerSymbol;
		this.insertDate = insertDate;
		this.root = root;
		this.userInfos = userInfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "polar_local_regions", nullable = false)
	public int getPolarLocalRegions() {
		return this.polarLocalRegions;
	}

	public void setPolarLocalRegions(int polarLocalRegions) {
		this.polarLocalRegions = polarLocalRegions;
	}

	@Column(name = "angular_local_regions", nullable = false)
	public int getAngularLocalRegions() {
		return this.angularLocalRegions;
	}

	public void setAngularLocalRegions(int angularLocalRegions) {
		this.angularLocalRegions = angularLocalRegions;
	}

	@Column(name = "polar_global_regions", nullable = false)
	public int getPolarGlobalRegions() {
		return this.polarGlobalRegions;
	}

	public void setPolarGlobalRegions(int polarGlobalRegions) {
		this.polarGlobalRegions = polarGlobalRegions;
	}

	@Column(name = "angular_global_regions", nullable = false)
	public int getAngularGlobalRegions() {
		return this.angularGlobalRegions;
	}

	public void setAngularGlobalRegions(int angularGlobalRegions) {
		this.angularGlobalRegions = angularGlobalRegions;
	}

	@Column(name = "points_per_symbol", nullable = false)
	public int getPointsPerSymbol() {
		return this.pointsPerSymbol;
	}

	public void setPointsPerSymbol(int pointsPerSymbol) {
		this.pointsPerSymbol = pointsPerSymbol;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "insert_date", nullable = false, length = 19)
	public Date getInsertDate() {
		return this.insertDate;
	}

	public void setInsertDate(Date insertDate) {
		this.insertDate = insertDate;
	}

	@Column(name = "root")
	public Boolean getRoot() {
		return this.root;
	}

	public void setRoot(Boolean root) {
		this.root = root;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userParameter")
	public Set<UserInfo> getUserInfos() {
		return this.userInfos;
	}

	public void setUserInfos(Set<UserInfo> userInfos) {
		this.userInfos = userInfos;
	}

}
